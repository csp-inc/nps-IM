# Model workflow code

name: Model CI # ==============================================================

on: # controls when the workflow will run

  push: # trigger workflow on push events, but only for the main branch
    branches: [ main ]
    paths:
      - "model-api/**"
      - ".github/actions/build-model/**"
      - ".github/workflows/model.yml"
      - "!README.md" # don't rebuild on documentation changes

  pull_request: # triggers workflow on pull request events (main branch only)
    branches: [ main ] # ensures changes are "mergeable"

  workflow_dispatch: # permits manual triggers from the Actions tab

jobs: # =======================================================================

  # ---------------------------------------------------------------------------
  count-variables: # creates template models for count data
  # ---------------------------------------------------------------------------

    strategy:
      matrix:
        likelihood: [ poisson ] #, negative-binomial, gen-pois
        link: [ linear, exponential ]
        # exclude:
        #   # excludes parameterizations
        #   - likelihood: gen-pois
        #     link: linear
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v2
        with:
          submodules: true  # fetch model and data API submodules
          fetch-depth: 0    # fetch all history for .GitInfo and .Lastmod

      - name: Build model
        uses: ./.github/actions/build-model # composite action to create model
        with:
          data-type: ${{ github.job }}
          likelihood: ${{ matrix.likelihood }}
          link: ${{ matrix.link }}

      # Each artifact behaves as a file share. Uploading to the same artifact
      # multiple times in the same workflow can overwrite and append already
      # uploaded files.
      - name: Upload assets directory as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: artifact-${{ github.sha }} # ${{ steps.findandreplace.outputs.value }}-artifact
          path: ~/assets # ${{ github.workspace }}

  # # ---------------------------------------------------------------------------
  # binomial-variables: # creates template models for successes / trials data
  # # ---------------------------------------------------------------------------
  #
  #   strategy:
  #     matrix:
  #       likelihood: [ binomial, beta-binomial ]
  #       link: [ inverse-logit ]
  #   runs-on: ubuntu-latest
  #
  #   steps:
  #
  #     - uses: actions/checkout@v2
  #       with:
  #         submodules: true  # fetch model and data API submodules
  #         fetch-depth: 0
  #
  #     - uses: ./.github/actions/build-model
  #       with:
  #         data-type: ${{ github.job }}
  #         likelihood: ${{ matrix.likelihood }}
  #         link: ${{ matrix.link }}
  #
  #     - name: Upload assets directory as an artifact
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: artifact-${{ github.sha }}
  #         path: ~/assets

  # ---------------------------------------------------------------------------
  define-jags-model-matrix:
  # ---------------------------------------------------------------------------

    needs: [ count-variables ] #, binomial-variables
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v2

      # Download artifacts
      - name: Download file share
        uses: actions/download-artifact@v2
        with:
          name: artifact-${{ github.sha }}
          path: ~/assets
      # - name: Display structure of downloaded files
      #   run: ls -R
      - run: find ~/assets -name "model.jags" #ls ~/assets/**/model.jags
      # - run: ls ~/assets/**/model.jags | awk ' BEGIN { ORS = ""; print "["; } { print "\/\@"$0"\/\@"; } END { print "]"; }' | sed "s^\"^\\\\\"^g;s^\/\@\/\@^\", \"^g;s^\/\@^\"^g"

      # Create the json array, we need the "id:" so we can use it in "outputs" bellow
      - name: Create JAGS model file list
        id: set-matrix
        run: echo "::set-output name=matrix::$(find ~/assets -name "model.jags" | perl -e 'use JSON; @in=grep(s/\n$//, <>); print encode_json(\@in)."\n";')"

    # here, we save the result of this 1st phase to the "outputs"
    outputs:
        matrix: ${{ steps.set-matrix.outputs.matrix }}

  # ---------------------------------------------------------------------------
  use-jags-models-to-sim-data:
  # ---------------------------------------------------------------------------

        needs: [ define-jags-model-matrix ]
        runs-on: ubuntu-latest

        strategy:
          # the magic happens here - create dynamic matrix from the json
          matrix:
            jags-model: ${{ fromJson(needs.define-jags-model-matrix.outputs.matrix) }}

        steps:
          - uses: actions/checkout@v2
            with:
              submodules: true  # Fetch Hugo themes (true OR recursive)
              fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod
          - run: echo ${{ matrix.jags-model }}

          - run: |
              cd model-api
              git checkout gh-submodule
              cat README.md
              cd ..

          - name: Download file share
            uses: actions/download-artifact@v2
            with:
              name: artifact-${{ github.sha }}
              path: ~/assets

          - run: cat ${{ matrix.jags-model }}

          - name: Display structure of workspace
            run: |
              echo ${{ matrix.jags-model }}
              ls ~/assets
              pwd
              ls
              cat model-api/demo/sim.R

          # Try this!
          - name: Use cached results
            # id: publish
            uses: ./.github/actions/call-r
            with:
              rfile: model-api/demo/sim.R
              args: ${{ matrix.jags-model }}

          # - name: Upload assets directory as an artifact
          #   uses: actions/upload-artifact@v2
          #   with:
          #     name: artifact-${{ github.sha }} # ${{ steps.findandreplace.outputs.value }}-artifact
          #     path: ~/assets # ${{ github.workspace }}

  # # ---------------------------------------------------------------------------
  # breadcrumbs: # artifacts
  # # ---------------------------------------------------------------------------
  #   steps:
  #     # Upload results
  #     - name: Upload Artifact
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: ${{ matrix.likelihood }}-models # was: ${{ steps.findandreplace.outputs.value }}-artifact
  #         path: ~/assets/${{ matrix.likelihood }}/**/*
  #         retention-days: 1
