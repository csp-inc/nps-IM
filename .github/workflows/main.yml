# Model workflow code

name: Model CI # ==============================================================

on: # controls when the workflow will run

  push: # trigger workflow on push events, but only for the main branch
    branches: [ main ]
    paths:
      - "model-api/**"
      - ".github/actions/build-model/**"
      - ".github/workflows/main.yml"
      - "st-kit/**"
      - "!README.md" # don't rebuild on documentation changes

  pull_request: # triggers workflow on pull request events (main branch only)
    branches: [ main ] # ensures changes are "mergeable"

  workflow_dispatch: # permits manual triggers from the Actions tab
    inputs:
      debug_enabled:
        description: 'Run the build with tmate debugging enabled'
        required: false
        default: false

  # workflow_run:
  #   workflows: [ "Docker" ]
  #   branches: [ main ]
  #   types: [ completed ]

jobs: # =======================================================================

  # ---------------------------------------------------------------------------
  count-vars: # creates template models for count data
  # ---------------------------------------------------------------------------

    strategy:
      matrix:
        likelihood: [ poisson ] #, negative-binomial, gen-pois
        link: [exponential] # [ linear, exponential ]
        gle: [b0] # [ b0, b0-b1 ]
        # exclude:
        #   # excludes parameterizations
        #   - likelihood: gen-pois
        #     link: linear
    runs-on: ubuntu-latest
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:

      - uses: actions/checkout@v2
        with:
          submodules: true  # fetch model and data API submodules
          fetch-depth: 0    # fetch all history for .GitInfo and .Lastmod

      # Build the JAGS model and save it in assets/
      - name: Build model
        uses: ./.github/actions/build-model # composite action to create model
        with:
          data-type: ${{ github.job }}
          likelihood: ${{ matrix.likelihood }}
          link: ${{ matrix.link }}
          gle: ${{ matrix.gle }}

      # Each artifact behaves as a file share. Uploading to the same artifact
      # multiple times in the same workflow can overwrite and append to already
      # uploaded files.
      - name: Upload assets directory as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: artifact-${{ github.sha }}
          path: assets

  # ---------------------------------------------------------------------------
  binomial-vars: # creates template models for successes / trials data
  # ---------------------------------------------------------------------------

    strategy:
      matrix:
        likelihood: [ binomial ] #, beta-binomial
        link: [ inverse-logit ]
        gle: [b0]#[ b0, b0-b1 ] #
        # exclude:
        #   # excludes parameterizations
        #   - likelihood: gen-pois
        #     link: linear
    runs-on: ubuntu-latest
    # if: false # skip job for now

    steps:

      - uses: actions/checkout@v2
        with:
          submodules: true  # fetch model and data API submodules
          fetch-depth: 0    # fetch all history for .GitInfo and .Lastmod

      - name: Build model
        uses: ./.github/actions/build-model # composite action to create model
        with:
          data-type: ${{ github.job }}
          likelihood: ${{ matrix.likelihood }}
          link: ${{ matrix.link }}
          gle: ${{ matrix.gle }}

      - name: Upload assets directory as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: artifact-${{ github.sha }}
          path: assets

  # ---------------------------------------------------------------------------
  define-jags-model-matrix:
  # ---------------------------------------------------------------------------

    needs: [ count-vars, binomial-vars ]
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v2

      - name: Download file share
        uses: actions/download-artifact@v2
        with:
          name: artifact-${{ github.sha }}
          path: assets

      - name: Create JAGS model file list as a JSON array
        id: set-matrix # we need an "id" so we can use it in "outputs" below
        run: |
          echo "::set-output name=matrix::$(find assets -name "model.jags" | \
          perl -e 'use JSON; @in=grep(s/\n$//, <>); print encode_json(\@in)."\n";')"

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  # ---------------------------------------------------------------------------
  use-jags-models-to-sim-data: # create dynamic matrix from json, simulate data
  # ---------------------------------------------------------------------------

    needs: [ define-jags-model-matrix ]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        jags-model: ${{ fromJson(needs.define-jags-model-matrix.outputs.matrix) }}
        options: [ --seed=123 ]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0

      - run: |
          cd model-api
          git checkout gh-submodule
          cd ..

      - name: Download file share
        uses: actions/download-artifact@v2
        with:
          name: artifact-${{ github.sha }}
          path: assets

      # Enable tmate debugging of manually-triggered workflows if the input
      # option was provided (i.e., debug_enabled=true)
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}

      - name: Use cached results (simulate data and fit model)
        id: verify
        uses: ./.github/actions/call-r
        with:
          rfile: model-api/demo/sim.R
          args: ${{ matrix.jags-model }}
          opts: ${{ matrix.options }}

      - name: Check status of model verification
        run: echo "The exit status was ${{ steps.verify.outputs.code }}"

      - name: Upload assets directory as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: artifact-${{ github.sha }}
          path: assets
