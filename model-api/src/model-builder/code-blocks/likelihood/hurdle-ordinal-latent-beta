        ## Likelihood for beta latent process (the conditional distribution of
        ## the positives after the 'hurdle' for presence has been crossed).
        a[n] <- max(.001,
                    (mu.p[n]^2 - mu.p[n]^3 - mu.p[n] * sigma.ss[y.site[n], y.strata[n]]^2) /
                    sigma.ss[y.site[n], y.strata[n]]^2)
        b[n] <- max(.001,
                    (mu.p[n] - 2 * mu.p[n]^2 + mu.p[n]^3 -
                    sigma.ss[y.site[n], y.strata[n]]^2 + mu.p[n] * sigma.ss[y.site[n], y.strata[n]]^2) /
                    sigma.ss[y.site[n], y.strata[n]]^2)
        y.latent[n] ~ dbeta(a[n], b[n])
        #y.beta[n] ~ dinterval(y.latent[n], lim.dint)
        y.beta[n] ~ dcat(pr[n, 1:nYlevels])
        y.rep.beta[n] ~ dcat(pr[n, 1:nYlevels])
        dFbeta[n] <- max(0.00001,
                         pbeta(lim.dint[y.beta[n] + 1], a[n], b[n]) -
                         pbeta(lim.dint[y.beta[n]], a[n], b[n]))
        pllike.0[n] <- log(dFbeta[n])

        # Cumulative distribution approach to likelihood.
        pr[n, 1] <- pbeta(lim[1], a[n], b[n])
        for (k in 2:(nYlevels - 1)) {
            pr[n, k] <- pbeta(lim[k], a[n], b[n]) - pbeta(lim[k - 1], a[n], b[n])
        }
        pr[n, nYlevels] <- 1 - pbeta(lim[nYlevels - 1], a[n], b[n])
