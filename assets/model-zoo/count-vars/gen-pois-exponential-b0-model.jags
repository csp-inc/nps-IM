# Authors: L. J. Zachmann and N. T. Hobbs. 2021.

# Likelihood: gen-pois
# Design matrix for additional covariates, X: present
# Deterministic model: exponential
# Group-level effects: b0
# Variance structure: fixed-stratum
# Release: v0.7.0

model {

    # ---- priors -------------------------------------------------------------
    # Prior for delta parameter of GP distribution.
    for(k in 1:y.n.strata) {
        delta[k] ~ dunif(-1, 1)
    }
    C <- 10000
    ## on the coefficients for each covariate.
    for(m in 1:length(X[1, ])) {
        Beta[m] ~ dnorm(0, 0.001)
    }
    ## on intercept parameters for each site within each stratum. Slopes vary by
    ## stratum.
    for(k in 1:y.n.strata) {
        mu.B0[k] ~ dnorm(0, 0.0001)
        sigma.B0[k] ~ dunif(1E-6, 100)
        tau.B0[k] <- 1 / sigma.B0[k]^2
        B1[k] ~ dnorm(0, 0.001)
        for(j in 1:y.n.site[k]) {
            ### Intercepts vary by site and stratum.
            B0[j, k] ~ dnorm(mu.B0[k], tau.B0[k])
            ### Put coefficients into matrix form to make them compatible with
            ### the multiple slopes model.
            B[j, 1, k] <- B0[j, k]
            B[j, 2, k] <- B1[k]
        }
    }

    # ---- likelihood ---------------------------------------------------------
    for(n in 1:length(y)) {
        ## Exponential deterministic model (w/ additional covariates).
        mu[n] <- exp(B[y.site[n], 1, y.strata[n]] +
                     B[y.site[n], 2, y.strata[n]] * x[n] +
                     X[n, ] %*% Beta) 
        ## Generalized Poisson likelihood.

        # From: Bayesian Models for Astrophysical Data, Cambridge Univ. Press
        # (c) 2017,  Joseph M. Hilbe, Rafael S. de Souza and Emille E. O. Ishida

        Zeros[n] ~ dpois(Zeros.mean[n])
        Zeros.mean[n] <- -L[n] + C

        l1[n] <- log(lambda[n])
        l2[n] <- (y[n] - 1) * log(lambda[n] + delta[y.strata[n]] * y[n])
        l3[n] <- -lambda[n] - delta[y.strata[n]] * y[n]
        l4[n] <- -loggam(y[n] + 1)
        L[n] <- l1[n] + l2[n] + l3[n] + l4[n]

        lambda[n] <- (1 - delta[y.strata[n]]) * exp(eta[n]) 

        # Discrepancy measures: mean, variance, Pearson residuals
        mu[n] <- lambda[n] / (1 - delta[y.strata[n]])
        var.y[n] <- lambda[n] / ((1 - delta[y.strata[n]])^3)
        ## Residuals.
        y.hat[n] <- mu[n]
        epsilon[n] <- y[n] - y.hat[n]
    }

    # ---- model checking -----------------------------------------------------
    # Quantities used for model checking (e.g., simulated data for comparison
    # to the observed data and Bayesian P values).


}
